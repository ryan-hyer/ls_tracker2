<div class="panel panel-primary">
  <div class="panel-heading">
    <button type="button" class="btn btn-info btn-xs pull-right" data-toggle="tooltip" data-placement="left" title="<p>Green - All is good!</p><p>Yellow - Inspection is due within 3 months or tagged work is not yet done.</p><p>Red - Inspection is overdue (last was more than 12 months ago)</p>" data-html="true"><strong>?</strong></button>
    Surveillance Status (last 12 months)
  </div>
  <table class="table table-condensed">
    <thead>
      <th>Client</th>
      <th>Facility</th>
      <th>Status</th>
    </thead>
    <tbody>
      <% @clients.each do |client| %>
        <tr>
          <td rowspan=<%=client.facilities.active.count%>><%= "#{client.name} (#{client.listing_number})" %></td>
          <% client.facilities.active.each do |facility| %>
            <td><%= facility.address %></td>
            <% if facility.inspections.empty? %>
              <td class="danger">Never Inspected</td>
            <% else %>
              <td class="<%=facility.inspection_status%>" nowrap>
                Last Inspected <%= facility.inspections.first.inspection_date %><br />
                <%= facility.inspections.first.tests.complete.count %> of <%= facility.inspections.first.tests.count %> Tagged Tests Done
              </td>
            <% end %>
            <%= "</tr><tr>".html_safe unless facility == client.facilities.last %>
          <% end %>
        </tr>
      <% end %>
    </tbody>
  </table>
</div>

<div class="panel panel-primary">
  <div class="panel-heading">
    <button type="button" class="btn btn-info btn-xs pull-right btn-reset-map" title="View Europe" data-location="Europe"><span class='glyphicon glyphicon-share-alt'></span> Europe</button>
    <button type="button" class="btn btn-info btn-xs pull-right btn-reset-map" title="View China" data-location="China"><span class='glyphicon glyphicon-share-alt'></span> China</button>
    <button type="button" class="btn btn-info btn-xs pull-right btn-reset-map" title="View North America" data-location="USA"><span class='glyphicon glyphicon-share-alt'></span> North America</button>
    Inspection Map
  </div>
  <div class="panel-body" id="map-canvas"></div>
</div>
<script src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
<script>
var map;
var infowindow = new google.maps.InfoWindow();

function initializeMap() {
  var facilities = [
    <% Client.active.each do |client| %>
      <% client.facilities.active.each do |facility| %>
        ['<%= client.name %>', '<%= facility.address.gsub(/\r\n/, ", ") %>', '<%= facility.inspection_status %>'],
      <% end %>
    <% end %>
  ];

  var mapOptions = {
    zoom: 4,
    center: new google.maps.LatLng(39.504, -98.438),
    mapTypeControl: false,
    streetViewControl: false
  };
  map = new google.maps.Map(document.getElementById('map-canvas'),mapOptions);

  setMarkers(map, facilities);
}

function recenterMap(obj) {
  var geocoder = new google.maps.Geocoder();
  geocoder.geocode({address: obj.getAttribute('data-location')}, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK) {
      map.panTo(results[0].geometry.location);
      map.setZoom(4)
    } else {
      alert("Geocoding error: " + status + "\r\n" + obj.getAttribute('data-location'));
    }
  });
}

function setMarkers(map, locations) {
  for (var i = 0; i< locations.length; i++) {
    var facility = locations[i];
    setMarker(map, facility[0], facility[1], facility[2]);
  }
}

function setMarker(map, title, address, iconType) {
  var icons = {};
  icons['success'] = 'http://maps.google.com/mapfiles/ms/icons/green-dot.png';
  icons['warning'] = 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png';
  icons['danger'] = 'http://maps.google.com/mapfiles/ms/icons/red-dot.png';
  
  var geocoder = new google.maps.Geocoder();
  geocoder.geocode({address: address}, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK) {
      var marker = new google.maps.Marker({
        position: results[0].geometry.location,
        map: map,
        icon: icons[iconType],
        title: title
      });
      var contentString = '<div class="gmap-popup">'+
        '<strong>'+title+'</strong><br />'+
        address+
        '</div>';
      google.maps.event.addListener(marker, 'click', function() {
        infowindow.setContent(contentString);
        infowindow.open(map, this);
      });
    } else {
      alert("Geocoding error: " + status + "\r\n" + location[1]);
    }
  });
}

google.maps.event.addDomListener(window, 'load', initializeMap);

var list = document.getElementsByClassName("btn-reset-map");
for (var i = 0; i < list.length; i++) {
  google.maps.event.addDomListener(list[i], 'click', function() {
    recenterMap(this);
  });
}
</script>